[{"/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/index.js":"1","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/reportWebVitals.js":"2","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/App.js":"3","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/DrawAvataar.js":"4","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/DisguiseControls.js":"5","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/OptionTable.js":"6","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/MakePepito.js":"7","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/DisguiseStore.js":"8","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/Disguise.js":"9","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/DisguiseRetrieve.js":"10","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/getWeb3.js":"11"},{"size":561,"mtime":1608486248232,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1608395041304,"results":"14","hashOfConfig":"13"},{"size":5453,"mtime":1614958318030,"results":"15","hashOfConfig":"13"},{"size":1315,"mtime":1610446745146,"results":"16","hashOfConfig":"13"},{"size":3198,"mtime":1611156107957,"results":"17","hashOfConfig":"13"},{"size":2223,"mtime":1610446745147,"results":"18","hashOfConfig":"13"},{"size":3733,"mtime":1611156107960,"results":"19","hashOfConfig":"13"},{"size":4635,"mtime":1612128288464,"results":"20","hashOfConfig":"13"},{"size":6130,"mtime":1610446745144,"results":"21","hashOfConfig":"13"},{"size":7632,"mtime":1611156107958,"results":"22","hashOfConfig":"13"},{"size":1696,"mtime":1611156107965,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1e630z9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/index.js",[],["50","51"],"/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/reportWebVitals.js",[],"/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/App.js",[],"/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/DrawAvataar.js",[],"/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/DisguiseControls.js",[],"/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/OptionTable.js",["52"],"/**  class OptionTable - project Pepito \n * @author Vu Tien Khang - Jan 2021\n * @notice display a table of disguise options\n * @dev will be upgraded to let the user select the options manually\n*/\nimport React from \"react\";\n// import { render } from \"react-dom\";\nimport ReactTable from \"react-table-6\";   // in npm library\nimport \"react-table-6/react-table.css\";   // (!) to be analysed\n\nclass OptionTable extends React.Component {\n    constructor(props) {\n        super(props);\n    };\n\n    render() {\n        /** @dev retrieve Pepito disguise options from this.props.disguise */\n        const {topType, hatColor, accessoriesType, hairColor, facialHairType, facialHairColor,\n            clotheType, clotheColor, eyeType, eyebrowType, mouthType, skinColor} = this.props.disguise;\n        const data = [        // array = rows, array components = JSON key:value pairs\n        {component: \"topType\",      option: topType},\n        {component: \"hatColor\",     option: hatColor},\n        {component: \"accessoriesType\",  option: accessoriesType},\n        {component: \"hairColor\",        option: hairColor},\n        {component: \"facialHairType\",   option: facialHairType},\n        {component: \"facialHairColor\",  option: facialHairColor},\n        {component: \"clotheType\",   option: clotheType},\n        {component: \"clotheColor\",  option: clotheColor},\n        {component: \"eyeType\",      option: eyeType},\n        {component: \"eyebrowType\",  option: eyebrowType},\n        {component: \"mouthType\",    option: mouthType},\n        {component: \"skinColor\",    option: skinColor},\n    ];\n    const columns = [       // our table has 2 columns\n        {Header: \"AvatarComponent\", accessor: \"component\"},  // 'Header' is any string, 'accessor' matches the JSON key\n        {Header: \"Option\",          accessor: \"option\"}      // a dropdown menu to select an option of the component\n    ];\n    return (\n      <div>\n        <ReactTable                // ReactTable is a component \n          data={data}              // props for ReactTable\n          columns={columns}        // props for ReactTable\n          defaultPageSize={12}\n          className=\"-striped -highlight\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default OptionTable;\n","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/MakePepito.js",[],"/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/DisguiseStore.js",["53","54"],"/**  class DisguiseStore - project Pepito \n * @author Vu Tien Khang - Jan 2021\n * @notice send transaction to deploy a disguiseContract and\n * @notice set the disguise state variable of this contract\n * @dev disguiseCount1 = count of disguises, in [1,n], because disguiseCount using safeMath not working yet\n*/\nimport React from 'react';\nimport './App.css';\nimport PepitoDisguise from \"./contracts_abi/PepitoDisguise.json\";   // to call web3 API\n\nclass DisguiseStore extends React.Component{\n    constructor() {\n        super();\n        this.state = {};\n    }\n\n    storeDisguise = async () => {\n        const web3Connected = this.props.web3Connected;\n        //console.log(\"--> 2.storeDisguise, web3Connected\", web3Connected);\n      \n        if(web3Connected){      // TODO: add a try-catch here\n            /** @dev    get the Factory contract */\n            const pepitoInstance = this.props.pepitoInstance;\n            //console.log(\"      2.storeDisguise.Pepito instance\", pepitoInstance);            \n\n            /** @dev    tell the Factory contract to deploy a PepitoDisguise contract */\n            const disguiseReceipt = await pepitoInstance.methods.createPepitoDisguise()\n                .send({from: this.props.ownerPepito});\n            //console.log('   2.storeDisguise-state.disguiseReceipt', disguiseReceipt)\n            \n            /** @dev    obtain latest array of all disguise addresses, using event of type PepitoDisguiseCreated\n             * note that in the way Pepito contract increments the disguiseCount, its value is in the range [1,n]\n             */\n            const lastEvent = await pepitoInstance.getPastEvents('PepitoDisguiseCreated', {});\n            const disguiseCount = lastEvent[0].returnValues.disguiseCount;\n            const disguiseAddresses = lastEvent[0].returnValues.disguiseAddresses;\n            const disguiseAddress = lastEvent[0].returnValues.disguiseAddresses[disguiseCount-1];\n            console.log('...     2.storeDisguise.lastEvent, count =', disguiseCount,\n                ', disguise addresses', disguiseAddresses);\n\n            /** @dev    build the array of options of features of this disguise to store it\n             * @dev     today we hard-code the features and their options to reduce blockchain storage\n             * @dev     when we'll be on IPFS, we'll use key-value pairs\n             */\n            const {idxTopType, idxHatColor, idxAccessoriesType, idxHairColor, idxFacialHairType, idxFacialHairColor,\n                idxClotheType, idxClotheColor, idxEyeType, idxEyebrowType, idxMouthType, idxSkinColor} = this.props.idxDisguise;\n            const disguise2store = [idxTopType, idxHatColor, idxAccessoriesType, idxHairColor, idxFacialHairType, idxFacialHairColor,\n                idxClotheType, idxClotheColor, idxEyeType, idxEyebrowType, idxMouthType, idxSkinColor];\n            console.log('        2.storeDisguise.disguise2store =', disguise2store);\n            /** Note: we could also make a single string of 24 characters with the 12 numbers by using string cat on\n                const pad2 = (num) => String(num).padStart(2, '0');\n                const disguise2store = pad2(idxTopType)+pad2(idxHatColor)+pad2(idxAccessoriesType) etc. */\n\n            /** @dev    return to App.js the count of disguises, their addresses & the disguise's options */\n            this.props.deployedDisguise(disguiseCount, disguiseAddresses, disguise2store);\n\n            /** create with web3 a connection to the last pepitoDisguise; */\n            const pepitoDisguise = new this.props.web3.eth.Contract(\n                    PepitoDisguise.abi,\n                    disguiseAddress,\n            );\n            /** @dev tell the PepitoDisguise contract to store the array of indexes of its features */\n            const storeDisguiseReceipt = await pepitoDisguise.methods.storeDisguise(disguise2store)\n                .send({from: this.props.ownerPepito });\n            //console.log(\"stored Disguise\", storeDisguiseReceipt, disguise2store);\n            this.setState({disguiseCount: disguiseCount});  // to update the render function\n      \n        } else alert(\"Please get first the blockchain interface & Pepito credentials\");  \n    }\n\n    render() {\n        return(\n            <>\n                <span>Hint: better not store twice the same disguise :)</span>\n                <button className=\"btn btn-lg btn-secondary mb-5\" \n                    onClick={this.storeDisguise}>Store disguise on blockchain\n                </button>\n                <span>, currently... {this.state.disguiseCount}</span>\n            </>\n        )\n    }\n}\n\nexport default DisguiseStore;","/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/Disguise.js",[],"/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/DisguiseRetrieve.js",[],"/Users/kvutien/Dropbox/MachuPicchu/Machu-Picchu/Pepito/client/src/getWeb3.js",[],["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":12,"column":5,"nodeType":"63","messageId":"64","endLine":14,"endColumn":6},{"ruleId":"65","severity":1,"message":"66","line":27,"column":19,"nodeType":"67","messageId":"68","endLine":27,"endColumn":34},{"ruleId":"65","severity":1,"message":"69","line":63,"column":19,"nodeType":"67","messageId":"68","endLine":63,"endColumn":39},{"ruleId":"57","replacedBy":"70"},{"ruleId":"59","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'disguiseReceipt' is assigned a value but never used.","Identifier","unusedVar","'storeDisguiseReceipt' is assigned a value but never used.",["72"],["73"],"no-global-assign","no-unsafe-negation"]